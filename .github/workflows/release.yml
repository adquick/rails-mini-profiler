name: release

on:
  push:
    branches: [ main ]

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.release_created.major }}.${{ steps.release.outputs.release_created.minor }}.${{ steps.release.outputs.release_created.patch }}

    steps:
      - uses: actions/checkout@v2
      - name: Generate Release 🗒️
        uses: GoogleCloudPlatform/release-please-action@v2
        id: release
        with:
          release-type: ruby
          package-name: rails-mini-profiler
          bump-minor-pre-major: true

  release:
    needs: prepare-release
    runs-on: ubuntu-latest
    if: ${{ needs.prepare-release.outputs.release_created }}

    steps:
      - uses: actions/checkout@v2

      - name: Update Gem Version
        run: |
          version=${{ needs.prepare-release.outputs.version }}
          sed -i "s|\(VERSION = \)'.*'|\1'$version'|" lib/rails_mini_profiler/version.rb

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.0
          bundler-cache: true
        env:
          BUNDLE_WITHOUT: 'development'
          BUNDLE_DEPLOYMENT: false # An incremented version number means we can't use deployment

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Packages
        uses: bahmutov/npm-install@v1

      - name: Compile Assets
        run: npm run build

      - name: Bump Package Version
        id: bump-version
        run: |
          npm version --no-git-tag-version ${{ needs.prepare-release.outputs.version }}

      - name: Commit Updated Files
        uses: EndBug/add-and-commit@v7
        with:
          add: "['Gemfile.lock', 'package.json', 'package-lock.json']"
          message: "chore: update files for ${{ needs.prepare-release.outputs.version }}"

      - name: Publish Gem 💎
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:
          RUBYGEMS_API_KEY: ${{secrets.RUBYGEMS_API_KEY}}

      - name: Publish Package 📦
        run: |
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_API_TOKEN }}
